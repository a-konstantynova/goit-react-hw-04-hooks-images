{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Modal/Modal.js","components/Button/Button.js","App.js","components/APIservice/api-service.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","s","searchbar","searchForm","e","preventDefault","trim","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","searchForm__button","searchForm__button_label","searchForm__input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","images","onOpenModal","map","webformatURL","tags","largeImageURL","item","src","alt","onClick","image","shortid","ImageGallery","gallery","Spinner","loader","color","height","width","timeout","Modal","onCloseModal","onClickByEscape","largeModalImg","useEffect","window","addEventListener","closeModalByEscape","removeEventListener","key","overlay","modal","Button","text","button","App","setImages","page","setPage","status","setStatus","error","setError","largeImage","setLargeImage","isOpenModal","setIsOpenModal","fetch","then","response","ok","json","Promise","reject","Error","fetchImages","prevState","hits","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","target","dataset","source","length","message","nodeName","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.2b7ba250.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__1g5Em\",\"image\":\"ImageGalleryItem_image__1wROB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3OpUm\",\"modal\":\"Modal_modal__18724\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__3kKeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3IgeZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3INEW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__R_-iN\",\"searchForm\":\"Searchbar_searchForm__3WW_K\",\"searchForm__button\":\"Searchbar_searchForm__button__2Kz1y\",\"searchForm__button_label\":\"Searchbar_searchForm__button_label__34z2b\",\"searchForm__input\":\"Searchbar_searchForm__input__b55kj\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleNameChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      toast.info('Введите поисковый запрос!', {\n        position: 'top-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return;\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form className={s.searchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.searchForm__button}>\n          <span className={s.searchForm__button_label}>Search</span>\n        </button>\n        <input\n          className={s.searchForm__input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  searchQuery: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ images, onOpenModal }) {\n  return images.map(({ webformatURL, tags, largeImageURL }) => (\n    <li className={s.item} key={shortid()}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        data-source={largeImageURL}\n        onClick={onOpenModal}\n        className={s.image}\n      />\n    </li>\n  ));\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string,\n    }),\n  ),\n  onOpenModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images, onOpenModal }) {\n  return (\n    <ul className={s.gallery}>\n      <ImageGalleryItem images={images} onOpenModal={onOpenModal} />\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  onOpenModal: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nexport default function Spinner() {\n  return (\n    <div className={s.loader}>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#046d12\"\n        height={60}\n        width={60}\n        timeout={4000}\n      />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nexport default function Modal({\n  onCloseModal,\n  onClickByEscape,\n  largeModalImg,\n}) {\n  useEffect(() => {\n    window.addEventListener('keydown', closeModalByEscape);\n\n    return () => {\n      window.removeEventListener('keydown', closeModalByEscape);\n    };\n  });\n\n  const closeModalByEscape = e => {\n    if (e.key !== 'Escape') {\n      return;\n    }\n    onClickByEscape();\n  };\n\n  return (\n    <div className={s.overlay} onClick={onCloseModal}>\n      <div className={s.modal}>\n        <img src={largeModalImg} alt=\"\" />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  largeModalImg: PropTypes.string.isRequired,\n  onClickByEscape: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ text, onClick }) {\n  return (\n    <button type=\"submit\" className={s.button} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport fetchImages from './components/APIservice';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const [largeImage, setLargeImage] = useState('');\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    setStatus('pending');\n    fetchImages(searchQuery, page)\n      .then(images => {\n        setImages(prevState => [...prevState, ...images.hits]);\n        setStatus('resolved');\n        if (page !== 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [searchQuery, page]);\n\n  const handleSearchbarSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setImages([]);\n    setPage(1);\n  };\n\n  const onLoadMoreClick = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const handleCloseModal = e => {\n    if (e.target.nodeName === 'IMG') {\n      return;\n    }\n    setIsOpenModal(false);\n    setLargeImage('');\n  };\n\n  const handleCloseModalByEscape = () => {\n    setIsOpenModal(false);\n    setLargeImage('');\n  };\n\n  const handleOpenModal = e => {\n    setIsOpenModal(true);\n    setLargeImage(e.target.dataset.source);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleSearchbarSubmit} />\n\n      <ImageGallery images={images} onOpenModal={handleOpenModal} />\n\n      {status === 'pending' && <Loader />}\n      {images.length !== 0 && (\n        <Button text=\"Load more\" onClick={onLoadMoreClick} />\n      )}\n\n      {status === 'rejected' && <h1>{error.message}</h1>}\n\n      {isOpenModal && (\n        <Modal\n          largeModalImg={largeImage}\n          onCloseModal={handleCloseModal}\n          onClickByEscape={handleCloseModalByEscape}\n        />\n      )}\n\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  page: PropTypes.number,\n  status: PropTypes.string,\n  error: PropTypes.string,\n  largeImage: PropTypes.string,\n  isOpenModal: PropTypes.bool,\n};\n","const API_KEY = '24082682-be762154a7013208570f58292';\nconst BASE_URL = 'https://pixabay.com/api/?';\n\nexport default function fetchImages(searchQuery, page) {\n  return fetch(\n    `${BASE_URL}q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`No image with query ${searchQuery}`));\n  });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}